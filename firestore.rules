/**
 * @fileOverview Firestore Security Rules for Redirect Link Management
 *
 * Core Philosophy:
 * This ruleset enforces public read access to redirect links while restricting write access to authenticated users only.
 * User activity logs are stored under each redirect link and are writeable only by authenticated users.
 *
 * Data Structure:
 * - /redirectLinks/{redirectLinkId}: Stores publicly accessible redirect link data.
 * - /redirectLinks/{redirectLinkId}/userActivities/{userActivityId}: Stores private user activity logs for each link.
 *
 * Key Security Decisions:
 * - Redirect links are publicly readable to enable the core redirection functionality.
 * - User listing is not allowed for the root `redirectLinks` collection.
 * - Strict owner-only access is enforced for creating and modifying redirect links.
 *
 * Denormalization for Authorization:
 * The `UserActivity` documents in the `/redirectLinks/{redirectLinkId}/userActivities/{userActivityId}` subcollection include a denormalized `redirectLinkId` field.
 * This allows security rules to validate the relationship between a user activity log and its parent redirect link without needing to perform costly `get()` operations.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read access to redirect links and restricts write access to authenticated users only.
     * @path /redirectLinks/{redirectLinkId}
     * @allow get, list: if true;
     * @allow create: if isSignedIn();
     * @allow update: if isSignedIn();
     * @allow delete: if isSignedIn();
     * @deny create: if !isSignedIn();
     * @deny update: if !isSignedIn();
     * @deny delete: if !isSignedIn();
     * @principle Allows any user to read redirect links, but only authenticated users can create, update, or delete them.
     */
    match /redirectLinks/{redirectLinkId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    /**
     * @description Restricts access to user activity logs under each redirect link to authenticated users.
     * @path /redirectLinks/{redirectLinkId}/userActivities/{userActivityId}
     * @allow create: if isSignedIn();
     * @allow update: if isSignedIn() && resource != null;
     * @allow delete: if isSignedIn() && resource != null;
     * @allow list: if isSignedIn();
     * @allow get: if isSignedIn();
     * @deny create: if !isSignedIn();
     * @deny update: if !isSignedIn();
     * @deny delete: if !isSignedIn();
     * @deny list: if !isSignedIn();
     * @deny get: if !isSignedIn();
     * @principle Enforces that only authenticated users can manage user activity logs.
     */
    match /redirectLinks/{redirectLinkId}/userActivities/{userActivityId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}