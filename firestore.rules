/**
 * @file Firebase Security Rules for Redirect Link Management
 *
 * @core_philosophy This ruleset prioritizes secure management of redirect links and associated user activity. It enforces strict access control to prevent unauthorized modification of redirect links while allowing public access for redirection purposes. User activity is securely logged and associated with specific redirect links, ensuring data privacy and enabling activity tracking.
 *
 * @data_structure
 * - `/redirectLinks/{redirectLinkId}`: Stores the core data for each redirect link.
 * - `/redirectLinks/{redirectLinkId}/userActivities/{userActivityId}`: Logs user activity associated with a specific redirect link.
 *
 * @key_security_decisions
 * - Redirect links are publicly readable for redirection purposes but write-protected to prevent unauthorized modification.
 * - User activity logs are private and accessible only with proper authorization.
 * - Listing of redirect links is allowed, but listing of user activities is restricted.
 * - The rules rely solely on `request.auth.uid` for authorization, given the absence of specified roles.
 * - Authorization independence is achieved by denormalizing `redirectLinkId` in the `userActivities` subcollection, eliminating the need for rules to `get()` the parent `redirectLinks` document.
 *
 * @denormalization_for_authorization
 * - The `userActivities` subcollection denormalizes the `redirectLinkId` from the parent `redirectLinks` document. This eliminates the need for rules to `get()` the parent document, satisfying the Authorization Independence principle. Rules can validate the `redirectLinkId` in the `request.resource.data` field without needing to read the parent document.
 *
 * @structural_segregation
 * - Redirect links and user activity data are stored in separate collections (`redirectLinks` and `userActivities`), ensuring that listing redirect links doesn't expose user activity data and that user activity data remains private.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows reading redirect links for redirection purposes and restricts write access to prevent unauthorized modification.
     * @path /redirectLinks/{redirectLinkId}
     * @allow (get, list): if true
     * @deny (create, update, delete): if false
     * @principle Allows public read access for redirection and restricts write access to prevent unauthorized modification.
     */
    match /redirectLinks/{redirectLinkId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows creating user activity records under a specific redirect link and restricts read/write access to prevent unauthorized data access.
     * @path /redirectLinks/{redirectLinkId}/userActivities/{userActivityId}
     * @allow (create): if isSignedIn() && request.resource.data.redirectLinkId == redirectLinkId;
     * @deny (get, list, update, delete): if false
     * @principle Restricts access to user activity data and ensures that the redirectLinkId matches the parent document.
     */
    match /redirectLinks/{redirectLinkId}/userActivities/{userActivityId} {
      allow get, list, update, delete: if false;
      allow create: if isSignedIn() && request.resource.data.redirectLinkId == redirectLinkId;
    }

    // --- Helper functions ---
    function isSignedIn() {
      return request.auth != null;
    }
  }
}